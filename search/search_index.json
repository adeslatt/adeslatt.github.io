{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\ud83d\udc49 MARCH 13-MARCH 17, 2023 CLICK TO REGISTER \ud83d\udc48 Kids First & INCLUDE Elements of Style in Workflow Creation Gabriella Miller Kids First Pediatric Research Program ( Kids First ) and the [INCLUDE]((https://includedcc.org/) (INvestigation of Co-occuring Conditions Across the Lifespan to Understand Down syndromE) Project are joining forces to offer a 5-day training program designed specifically for researchers. Learn how to use cloud platforms and workflows to ask scientific questions with ease and confidence. Our expert instructors will guide you through the processes that assure reproducibility, repurposability regardless of the computational environment. Achieve greater success with a modular, testable approach to work. In 2018, the NIH launched INCLUDE Project to improve the health and quality of life for people with Down syndrome. The INCLUDE Data Coordinating Center (DCC) was created to give Down Syndrome researchers and the community access to data and analysis tools including a free-to-use resource called the INCLUDE Data Hub . The Data Hub brings information and resources from many sources to gether in one place and allows scientists to study conditions affecting individuals with Down syndrome fastr than ever before. Kids First is a trans-NIH Common Fund program whose goal is to help researchers uncover new insights into the biology of childhood cancer and structural birth defects, including the discovery of shared genetic pathways between these disorders. To achieve this goal, the program has developed the Kids First Data Resource Center, a cloud-based platform which publicly shares genetic and clinical data from 30,000 childhood cancer and structural birth defect patients and families. Through the Kids First Data Resource Portal researchers have access to analysis tools and collaborative research. Both of these platforms are gateways that provide democratizing access to the vast and flexible world of cloud computing, powered by CAVATICA and Velsera (formerly Seven Bridges) Before you attend the course, you need to set up GitHub , Zenodo and ORCID accounts and have basic knowledge of the terminal window, shell environment and the commands for navigation within that environment Course Overview:","title":"Home"},{"location":"#march-13-march-17-2023-click-to-register","text":"","title":"\ud83d\udc49 MARCH 13-MARCH 17, 2023 CLICK TO REGISTER \ud83d\udc48"},{"location":"#kids-first-include-elements-of-style-in-workflow-creation","text":"Gabriella Miller Kids First Pediatric Research Program ( Kids First ) and the [INCLUDE]((https://includedcc.org/) (INvestigation of Co-occuring Conditions Across the Lifespan to Understand Down syndromE) Project are joining forces to offer a 5-day training program designed specifically for researchers. Learn how to use cloud platforms and workflows to ask scientific questions with ease and confidence. Our expert instructors will guide you through the processes that assure reproducibility, repurposability regardless of the computational environment. Achieve greater success with a modular, testable approach to work. In 2018, the NIH launched INCLUDE Project to improve the health and quality of life for people with Down syndrome. The INCLUDE Data Coordinating Center (DCC) was created to give Down Syndrome researchers and the community access to data and analysis tools including a free-to-use resource called the INCLUDE Data Hub . The Data Hub brings information and resources from many sources to gether in one place and allows scientists to study conditions affecting individuals with Down syndrome fastr than ever before. Kids First is a trans-NIH Common Fund program whose goal is to help researchers uncover new insights into the biology of childhood cancer and structural birth defects, including the discovery of shared genetic pathways between these disorders. To achieve this goal, the program has developed the Kids First Data Resource Center, a cloud-based platform which publicly shares genetic and clinical data from 30,000 childhood cancer and structural birth defect patients and families. Through the Kids First Data Resource Portal researchers have access to analysis tools and collaborative research. Both of these platforms are gateways that provide democratizing access to the vast and flexible world of cloud computing, powered by CAVATICA and Velsera (formerly Seven Bridges) Before you attend the course, you need to set up GitHub , Zenodo and ORCID accounts and have basic knowledge of the terminal window, shell environment and the commands for navigation within that environment","title":"Kids First &amp; INCLUDE Elements of Style in Workflow Creation"},{"location":"#course-overview","text":"","title":"Course Overview:"},{"location":"about/attribution/","text":"Acknowledgements CAVATICA is a joint development between Seven Bridges and the Children's Hospital of Philadelphia Seven Bridges supports multiple workflow languages in its application development, including CWL, Nextflow and soon WDL Nextflow workflow information and guidance was gratefully received from Phil Palmer from his classes at the Jackson Laboratory while he was at Lifebit and @cgpu Christina Chatzipantsiou has been my infallible guide. @cgpu Christina Chatzipantsiou taught with me the Dry Bench Skills for the Researchers and Elements of Style class at the ISCB Academy. Common Workflow script guidance was gratefully received from Miguel Brown at Children's Hospital of Philadelphia.","title":"Attribution"},{"location":"about/attribution/#acknowledgements","text":"CAVATICA is a joint development between Seven Bridges and the Children's Hospital of Philadelphia Seven Bridges supports multiple workflow languages in its application development, including CWL, Nextflow and soon WDL Nextflow workflow information and guidance was gratefully received from Phil Palmer from his classes at the Jackson Laboratory while he was at Lifebit and @cgpu Christina Chatzipantsiou has been my infallible guide. @cgpu Christina Chatzipantsiou taught with me the Dry Bench Skills for the Researchers and Elements of Style class at the ISCB Academy. Common Workflow script guidance was gratefully received from Miguel Brown at Children's Hospital of Philadelphia.","title":"Acknowledgements"},{"location":"about/background/","text":"About Over a period of 5 days, only two hours a day, the learner learned elements of style in the construction and containerization of small single-function processes that facilitate repurposable workflow creation and execution. This hands-on-tutorial was given through a webinar using the Kids First Data Resource Center . This repository was used in the course and contains self-learnings to facilitate work. In this repository, contains how these processes may be kept up-to-date and alert the creator to the functional state of these processes (working or failing) by using a feature found within GitHub called GitHub Actions. This hands-on-course will use a small example to provide the structure, philosophy and approach to achieving this desirable outcome. This course seeks to help to demystify and make accessible powerful methods one can use to achieve platform independence and platform interoperability. Using a simple example to demonstrate these techniques, we will break down and walk the learner through each of the construction steps. The learners will be introduced to Conda, Docker, GitHub and the standard workflow language, Nextflow. If time permits, we will also show how these containerized processes can also be represented in a second standard workflow language implementation (e.g. Common Workflow Language or WDL). By the end of the course, the learner will understand these Elements of Style and will know how Conda, Docker, GitHub, Zenodo, and Nextflow enable repurposable research. Moreover, these steps will be on GitHub for the Learner to return to and reproduce themselves after the end of the course. In taking this course, the Learner will also be shown the power of JupyterLab notebooks to facilitate literate programming. Through their participation in the class, learners will learn and understand FAIR (findability, accessibility, interoperability and reusability) best practices. We ask all participants to get a GitHub, Zenodo and ORCID accounts prior to the course. We ask for minimal background knowledge of the command line, simple commands in the shell environment, we enable a bit of self-learning from the repository to facilitate the acquisition of this knowledge. This work was powered on CAVATICA and Kids First Data Resource Center","title":"Background"},{"location":"about/background/#about","text":"Over a period of 5 days, only two hours a day, the learner learned elements of style in the construction and containerization of small single-function processes that facilitate repurposable workflow creation and execution. This hands-on-tutorial was given through a webinar using the Kids First Data Resource Center . This repository was used in the course and contains self-learnings to facilitate work. In this repository, contains how these processes may be kept up-to-date and alert the creator to the functional state of these processes (working or failing) by using a feature found within GitHub called GitHub Actions. This hands-on-course will use a small example to provide the structure, philosophy and approach to achieving this desirable outcome. This course seeks to help to demystify and make accessible powerful methods one can use to achieve platform independence and platform interoperability. Using a simple example to demonstrate these techniques, we will break down and walk the learner through each of the construction steps. The learners will be introduced to Conda, Docker, GitHub and the standard workflow language, Nextflow. If time permits, we will also show how these containerized processes can also be represented in a second standard workflow language implementation (e.g. Common Workflow Language or WDL). By the end of the course, the learner will understand these Elements of Style and will know how Conda, Docker, GitHub, Zenodo, and Nextflow enable repurposable research. Moreover, these steps will be on GitHub for the Learner to return to and reproduce themselves after the end of the course. In taking this course, the Learner will also be shown the power of JupyterLab notebooks to facilitate literate programming. Through their participation in the class, learners will learn and understand FAIR (findability, accessibility, interoperability and reusability) best practices. We ask all participants to get a GitHub, Zenodo and ORCID accounts prior to the course. We ask for minimal background knowledge of the command line, simple commands in the shell environment, we enable a bit of self-learning from the repository to facilitate the acquisition of this knowledge. This work was powered on CAVATICA and Kids First Data Resource Center","title":"About"},{"location":"about/how-this-site-was-made/","text":"How this site was made This site was made and is maintained using MkDocs . It was pretty straight forward to convert the existing GitHub repository structure used for teaching the Elements of Style course. The tricky part was understanding the deployment aspect. I did this by understanding the two different functions of this repository. Location for teaching and using MarkDown for the information Website for navigation of the content. Both of the different functions require their own repositories. The first repository is the content repository where the information is maintained, added to and altered. The second repository is the GitHub pages repository where the html information is generated and deployed. Because this repository is auto-generated, it is important not to edit there, however it still needs to exist. This was a difficult concept for me to wrap my head around. Kids First & INCLUDE Elements of Style Content Kids First & INCLUDE Elements of Style WebSite","title":"Making this site"},{"location":"about/how-this-site-was-made/#how-this-site-was-made","text":"This site was made and is maintained using MkDocs . It was pretty straight forward to convert the existing GitHub repository structure used for teaching the Elements of Style course. The tricky part was understanding the deployment aspect. I did this by understanding the two different functions of this repository. Location for teaching and using MarkDown for the information Website for navigation of the content. Both of the different functions require their own repositories. The first repository is the content repository where the information is maintained, added to and altered. The second repository is the GitHub pages repository where the html information is generated and deployed. Because this repository is auto-generated, it is important not to edit there, however it still needs to exist. This was a difficult concept for me to wrap my head around.","title":"How this site was made"},{"location":"about/how-this-site-was-made/#kids-first-include-elements-of-style-content","text":"","title":"Kids First &amp; INCLUDE Elements of Style Content"},{"location":"about/how-this-site-was-made/#kids-first-include-elements-of-style-website","text":"","title":"Kids First &amp; INCLUDE Elements of Style WebSite"},{"location":"about/license/","text":"Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"License"},{"location":"about/other-topics-of-interest/","text":"Background Information and other Topics of Interest Anaconda Package Jupytext CAVATICA Data Studio JupyterLab Startup INCLUDE DataHub Login with ORCID Shell Google Cloud","title":"Other topics of interest"},{"location":"about/other-topics-of-interest/#background-information-and-other-topics-of-interest","text":"Anaconda Package Jupytext CAVATICA Data Studio JupyterLab Startup INCLUDE DataHub Login with ORCID Shell Google Cloud","title":"Background Information and other Topics of Interest"},{"location":"classes/day-1-reasoning/A-Few-Simple-Rules-Shortened/","text":"A Few Simple Rules - Shortened Edition Disclaimer The views expressed in this course represent the views of Anne Deslattes Mays, PhD and do not represent the views of NICHD, NIH or the United States Government. In what follows - is my development of a practice that enables workflow and platform independence facilitating repurposability. Learning from those who have walked the journey Elements of Programming Style B. W. Kernighan and P. J. Plauger, The Elements of Programming Style 2nd Edition, McGraw Hill, New York, 1978. ISBN 0-07-034207-5 Quotes by P. J. Plauger The year was 1919, the first World War was at its close and a student, E. B. White, took a course, English 8, taught by William Strunk Jr. The course featured a required textbook, a slim volume called The Elements of Style . The durability of this slim book informed the development of the book, The Elements of Programming Style by Kernigan and Plauger, whose lessons we adapt here in this course. Showing again the durability of the approach of beginning with philosophy as one approaches their work and use of programs and structure to achieve their work. So with this nod to E.B. White, William Strunk, Jr, Brian Kernigan and Plauger, we begin with our own Lessons and Pithy Phrases. What is a Pithy Phrase: A pithy phrase or statement is brief but full of substance and meaning Lessons Translated to the Workflow/Containerized Process (Truncated Pithy Phrases) Top 10 Lessons Number Lesson Relates Too Full Lessons Number 1. Write clearly \u2013 don't be too clever. Everything 1. 2. Write first in easy-to-understand pseudo language Everything 13. 3. Modularize. Use procedures and functions. Containerizing with Dockerfile 14. 4. Write and test in small pieces. Use Dockerfiles, GitHub Actions to test 17. 5. Test inputs and outputs Test on command line workflows are input, process, output 19. 6. Use debugging compilers. Compiling with workflows 29. 7. Make it right before you make it faster. Everything 30. 8. Make sure special cases are truly special. Everythng 35. 9. Keep it simple to make it faster. Everything 36. 10. Document your process in GitHub use workflow languages, containers and GitHub 45. A Few Simple Rules - Full List A Few Simple Rules Return to today's Agenda","title":"A Few Simple Rules Shortened"},{"location":"classes/day-1-reasoning/A-Few-Simple-Rules-Shortened/#a-few-simple-rules-shortened-edition","text":"","title":"A Few Simple Rules - Shortened Edition"},{"location":"classes/day-1-reasoning/A-Few-Simple-Rules-Shortened/#disclaimer","text":"The views expressed in this course represent the views of Anne Deslattes Mays, PhD and do not represent the views of NICHD, NIH or the United States Government. In what follows - is my development of a practice that enables workflow and platform independence facilitating repurposability.","title":"Disclaimer"},{"location":"classes/day-1-reasoning/A-Few-Simple-Rules-Shortened/#learning-from-those-who-have-walked-the-journey","text":"Elements of Programming Style B. W. Kernighan and P. J. Plauger, The Elements of Programming Style 2nd Edition, McGraw Hill, New York, 1978. ISBN 0-07-034207-5 Quotes by P. J. Plauger The year was 1919, the first World War was at its close and a student, E. B. White, took a course, English 8, taught by William Strunk Jr. The course featured a required textbook, a slim volume called The Elements of Style . The durability of this slim book informed the development of the book, The Elements of Programming Style by Kernigan and Plauger, whose lessons we adapt here in this course. Showing again the durability of the approach of beginning with philosophy as one approaches their work and use of programs and structure to achieve their work. So with this nod to E.B. White, William Strunk, Jr, Brian Kernigan and Plauger, we begin with our own Lessons and Pithy Phrases. What is a Pithy Phrase: A pithy phrase or statement is brief but full of substance and meaning","title":"Learning from those who have walked the journey"},{"location":"classes/day-1-reasoning/A-Few-Simple-Rules-Shortened/#lessons-translated-to-the-workflowcontainerized-process-truncated-pithy-phrases","text":"Top 10 Lessons Number Lesson Relates Too Full Lessons Number 1. Write clearly \u2013 don't be too clever. Everything 1. 2. Write first in easy-to-understand pseudo language Everything 13. 3. Modularize. Use procedures and functions. Containerizing with Dockerfile 14. 4. Write and test in small pieces. Use Dockerfiles, GitHub Actions to test 17. 5. Test inputs and outputs Test on command line workflows are input, process, output 19. 6. Use debugging compilers. Compiling with workflows 29. 7. Make it right before you make it faster. Everything 30. 8. Make sure special cases are truly special. Everythng 35. 9. Keep it simple to make it faster. Everything 36. 10. Document your process in GitHub use workflow languages, containers and GitHub 45.","title":"Lessons Translated to the Workflow/Containerized Process (Truncated Pithy Phrases)"},{"location":"classes/day-1-reasoning/A-Few-Simple-Rules-Shortened/#a-few-simple-rules-full-list","text":"A Few Simple Rules","title":"A Few Simple Rules - Full List"},{"location":"classes/day-1-reasoning/A-Few-Simple-Rules-Shortened/#return-to-todays-agenda","text":"","title":"Return to today's Agenda"},{"location":"classes/day-1-reasoning/A-Few-Simple-Rules/","text":"A Few Simple Rules Disclaimer The views expressed in this course represent the views of Anne Deslattes Mays, PhD and do not represent the views of NICHD, NIH or the United States Government. In what follows - is my development of a practice that enables workflow and platform independence facilitating reproducibility. Learning from those who have walked the journey Elements of Programming Style B. W. Kernighan and P. J. Plauger, The Elements of Programming Style 2nd Edition, McGraw Hill, New York, 1978. ISBN 0-07-034207-5 Quotes by P. J. Plauger The year was 1919, the first World War was at its close and a student, E. B. White, took a course, English 8, taught by William Strunk Jr. The course featured a required textbook, a slim volume called The Elements of Style . The durability of this slim book informed the development of the book, The Elements of Programming Style by Kernigan and Plauger, whose lessons we adapt here in this course. Showing again the durability of the approach of beginning with philosophy as one approaches their work and use of programs and structure to achieve their work. So with this nod to E.B. White, William Strunk, Jr, Brian Kernigan and Plauger, we begin with our own Lessons and Pithy Phrases. Lessons Translated to the Workflow/Containerized Process (Truncated Pithy Phrases) Where I have made modifications to these Pithy Phrases to the map to what we are teaching here will be in italized and emphasized Its lessons are summarized at the end of each section in pithy maxims, such as \"Let the machine do the dirty work\": Write clearly \u2013 don't be too clever. timeless Say what you mean, simply and directly. timeless Use containerized processes (in a way similar to library functions) whenever feasible. Avoid too many temporary variables. Write clearly \u2013 don't sacrifice clarity for efficiency. timeless Let the machine do the dirty work. timeless Replace repetitive expressions by calls to common functions. timeless - when you start to see yourself do this - replace with a single function Parenthesize to avoid ambiguity. 9 Choose variable names that won't be confused. timeless Avoid unnecessary branches. If a logical expression is hard to understand, try transforming it. timeless Choose a data representation that makes the program simple. Write first in easy-to-understand pseudo language; then translate into whatever language you have to use. timeless Modularize. Use procedures and functions. and containerize - use GitHub Actions to build, test and keep up-to-date Avoid gotos completely if you can keep the program readable. Don't patch bad code \u2013 rewrite it. Write and test a big program in small pieces. timeless this can be done by the use of these tested, dockerized processes Use recursive procedures for recursively-defined data structures. Test input for plausibility and validity. timeless - make sure you understand the source of your data Make sure input doesn't violate the limits of the program. Terminate input by end-of-file marker, not by count. Identify bad input; recover if possible. Make input easy to prepare and output self-explanatory. Use uniform input formats. Make input easy to proofread. timeless Use self-identifying input. Allow defaults. Echo both on output. Make sure all variables are initialized before use. Don't stop at one bug. Use debugging compilers. timeless this is different with workflow languages - you can test each of the steps in the workflow verifying inputs, outputs and processes - dockerizing, testing Watch out for off-by-one errors. timeless Take care to branch the right way on equality. Be careful if a loop exits to the same place from the middle and the bottom. Make sure your code does \"nothing\" gracefully. Test programs at their boundary values. Check some answers by hand. timeless 10.0 times 0.1 is hardly ever 1.0. timeless always aim for simplicity 7/8 is zero while 7.0/8.0 is not zero. timeless but this would be better for an R or a Python class Don't compare floating point numbers solely for equality. timeless but this would be better for an R or a Python class Make it right before you make it faster. timeless for everything Make it fail-safe before you make it faster. timeless Make it clear before you make it faster. timeless Don't sacrifice clarity for small gains in efficiency. timeless Let your compiler do the simple optimizations. `again, for our world of platforms, let your platform help you - Platforms as a Service, such as CAVATICA by Seven Bridges and CloudOS by Lifebit Don't strain to re-use code; reorganize instead. timeless the more you perform a task, the simpler you see how to get it done, exploit that simplicity and rewrite Make sure special cases are truly special. timeless Keep it simple to make it faster. timeless Don't diddle code to make it faster \u2013 find a better algorithm. timeless find another Bioinformatics algorithm, collaborate, give attribution and expand your reach Instrument your programs. Measure before making efficiency changes. timeless - this means if you introduce changes - are they appropriate Make sure comments and code agree. timeless Don't just echo the code with comments \u2013 make every comment count. timeless Don't comment bad code \u2013 rewrite it. timeless Use variable names that mean something. Use statement labels that mean something. Format a program to help the reader understand it. timeless Document your data layouts. timeless Don't over-comment. timeless Other useful and informative points","title":"A Few Simple Rules"},{"location":"classes/day-1-reasoning/A-Few-Simple-Rules/#a-few-simple-rules","text":"","title":"A Few Simple Rules"},{"location":"classes/day-1-reasoning/A-Few-Simple-Rules/#disclaimer","text":"The views expressed in this course represent the views of Anne Deslattes Mays, PhD and do not represent the views of NICHD, NIH or the United States Government. In what follows - is my development of a practice that enables workflow and platform independence facilitating reproducibility.","title":"Disclaimer"},{"location":"classes/day-1-reasoning/A-Few-Simple-Rules/#learning-from-those-who-have-walked-the-journey","text":"Elements of Programming Style B. W. Kernighan and P. J. Plauger, The Elements of Programming Style 2nd Edition, McGraw Hill, New York, 1978. ISBN 0-07-034207-5 Quotes by P. J. Plauger The year was 1919, the first World War was at its close and a student, E. B. White, took a course, English 8, taught by William Strunk Jr. The course featured a required textbook, a slim volume called The Elements of Style . The durability of this slim book informed the development of the book, The Elements of Programming Style by Kernigan and Plauger, whose lessons we adapt here in this course. Showing again the durability of the approach of beginning with philosophy as one approaches their work and use of programs and structure to achieve their work. So with this nod to E.B. White, William Strunk, Jr, Brian Kernigan and Plauger, we begin with our own Lessons and Pithy Phrases.","title":"Learning from those who have walked the journey"},{"location":"classes/day-1-reasoning/A-Few-Simple-Rules/#lessons-translated-to-the-workflowcontainerized-process-truncated-pithy-phrases","text":"Where I have made modifications to these Pithy Phrases to the map to what we are teaching here will be in italized and emphasized Its lessons are summarized at the end of each section in pithy maxims, such as \"Let the machine do the dirty work\": Write clearly \u2013 don't be too clever. timeless Say what you mean, simply and directly. timeless Use containerized processes (in a way similar to library functions) whenever feasible. Avoid too many temporary variables. Write clearly \u2013 don't sacrifice clarity for efficiency. timeless Let the machine do the dirty work. timeless Replace repetitive expressions by calls to common functions. timeless - when you start to see yourself do this - replace with a single function Parenthesize to avoid ambiguity. 9 Choose variable names that won't be confused. timeless Avoid unnecessary branches. If a logical expression is hard to understand, try transforming it. timeless Choose a data representation that makes the program simple. Write first in easy-to-understand pseudo language; then translate into whatever language you have to use. timeless Modularize. Use procedures and functions. and containerize - use GitHub Actions to build, test and keep up-to-date Avoid gotos completely if you can keep the program readable. Don't patch bad code \u2013 rewrite it. Write and test a big program in small pieces. timeless this can be done by the use of these tested, dockerized processes Use recursive procedures for recursively-defined data structures. Test input for plausibility and validity. timeless - make sure you understand the source of your data Make sure input doesn't violate the limits of the program. Terminate input by end-of-file marker, not by count. Identify bad input; recover if possible. Make input easy to prepare and output self-explanatory. Use uniform input formats. Make input easy to proofread. timeless Use self-identifying input. Allow defaults. Echo both on output. Make sure all variables are initialized before use. Don't stop at one bug. Use debugging compilers. timeless this is different with workflow languages - you can test each of the steps in the workflow verifying inputs, outputs and processes - dockerizing, testing Watch out for off-by-one errors. timeless Take care to branch the right way on equality. Be careful if a loop exits to the same place from the middle and the bottom. Make sure your code does \"nothing\" gracefully. Test programs at their boundary values. Check some answers by hand. timeless 10.0 times 0.1 is hardly ever 1.0. timeless always aim for simplicity 7/8 is zero while 7.0/8.0 is not zero. timeless but this would be better for an R or a Python class Don't compare floating point numbers solely for equality. timeless but this would be better for an R or a Python class Make it right before you make it faster. timeless for everything Make it fail-safe before you make it faster. timeless Make it clear before you make it faster. timeless Don't sacrifice clarity for small gains in efficiency. timeless Let your compiler do the simple optimizations. `again, for our world of platforms, let your platform help you - Platforms as a Service, such as CAVATICA by Seven Bridges and CloudOS by Lifebit Don't strain to re-use code; reorganize instead. timeless the more you perform a task, the simpler you see how to get it done, exploit that simplicity and rewrite Make sure special cases are truly special. timeless Keep it simple to make it faster. timeless Don't diddle code to make it faster \u2013 find a better algorithm. timeless find another Bioinformatics algorithm, collaborate, give attribution and expand your reach Instrument your programs. Measure before making efficiency changes. timeless - this means if you introduce changes - are they appropriate Make sure comments and code agree. timeless Don't just echo the code with comments \u2013 make every comment count. timeless Don't comment bad code \u2013 rewrite it. timeless Use variable names that mean something. Use statement labels that mean something. Format a program to help the reader understand it. timeless Document your data layouts. timeless Don't over-comment. timeless","title":"Lessons Translated to the Workflow/Containerized Process (Truncated Pithy Phrases)"},{"location":"classes/day-1-reasoning/A-Few-Simple-Rules/#other-useful-and-informative-points","text":"","title":"Other useful and informative points"},{"location":"classes/day-1-reasoning/creating-a-cavatica-account/","text":"Creating a CAVATICA Account Creating an Account on CAVATICA Please create your account on CAVATICA Navigate to CAVATICA First screen you will see: You can either select Create an account or Log in with eRA Commons . If you select Create an account , you will see: Or if you select Log in with eRACommons you will see: See further documentation: CAVATICA Account Login Creation Documentation Lets return to spin up a notebook Next Spin Up a Machine for the Notebook","title":"Creating a CAVATICA Account"},{"location":"classes/day-1-reasoning/creating-a-cavatica-account/#creating-a-cavatica-account","text":"","title":"Creating a CAVATICA Account"},{"location":"classes/day-1-reasoning/creating-a-cavatica-account/#creating-an-account-on-cavatica","text":"Please create your account on CAVATICA Navigate to CAVATICA First screen you will see: You can either select Create an account or Log in with eRA Commons . If you select Create an account , you will see: Or if you select Log in with eRACommons you will see: See further documentation: CAVATICA Account Login Creation Documentation","title":"Creating an Account on CAVATICA"},{"location":"classes/day-1-reasoning/creating-a-cavatica-account/#lets-return-to-spin-up-a-notebook","text":"Next Spin Up a Machine for the Notebook","title":"Lets return to spin up a notebook"},{"location":"classes/day-1-reasoning/day-1-reasoning/","text":"Agenda for the Day 1: Reasoning Time (UTC) Programme 11.00 - 11:30 Welcome Address and Presentation 11.30 - 11.45 A few simple rules for easier workflow maintenance and reuse 11:45 - 12:00 Lets Dive In, Create an Account, Start a JupyterLab Notebook 12.00 - 12.10 Short Break 12.10 - 12.25 Introduction to the Command-line 12.25 - 12.50 Example Volcano Plot on CAVATICA 12.50 - 13:00 Wrap up and overview of next days topics Additional Resources: NIH Kids First Cloud Credit Program Overview NIH INCLUDE Cloud Credit Program Overview How to apply for Kids First Cloud Credits How to apply for INCLUDE Cloud Credits Joint Kids First and INCLUDE with Velsera (formerly Seven Bridges) Monthly User Support Office Hours - every third Thursday of the month JupyterLab Notebook Conversions The Jupyter Text - do you like working in R Studio with R-markdown? You can convert easily JupyterLab notebooks with R kernels to R Script or R markdown. Explore the concept here: - Jupytext Supported Languages - Jupytext Command Line","title":"Day 1 - Reasoning"},{"location":"classes/day-1-reasoning/day-1-reasoning/#agenda-for-the-day-1-reasoning","text":"Time (UTC) Programme 11.00 - 11:30 Welcome Address and Presentation 11.30 - 11.45 A few simple rules for easier workflow maintenance and reuse 11:45 - 12:00 Lets Dive In, Create an Account, Start a JupyterLab Notebook 12.00 - 12.10 Short Break 12.10 - 12.25 Introduction to the Command-line 12.25 - 12.50 Example Volcano Plot on CAVATICA 12.50 - 13:00 Wrap up and overview of next days topics","title":"Agenda for the Day 1: Reasoning"},{"location":"classes/day-1-reasoning/day-1-reasoning/#additional-resources","text":"NIH Kids First Cloud Credit Program Overview NIH INCLUDE Cloud Credit Program Overview How to apply for Kids First Cloud Credits How to apply for INCLUDE Cloud Credits Joint Kids First and INCLUDE with Velsera (formerly Seven Bridges) Monthly User Support Office Hours - every third Thursday of the month","title":"Additional Resources:"},{"location":"classes/day-1-reasoning/day-1-reasoning/#jupyterlab-notebook-conversions","text":"The Jupyter Text - do you like working in R Studio with R-markdown? You can convert easily JupyterLab notebooks with R kernels to R Script or R markdown. Explore the concept here: - Jupytext Supported Languages - Jupytext Command Line","title":"JupyterLab Notebook Conversions"},{"location":"classes/day-1-reasoning/lets-dive-in/","text":"Let's Dive In So we can be ready with a running notebook, lets get a machine up and running - once up - it will stay up for 30 minutes -- challenging us to keep to our agenda! Lets see how we do! FAST Track Create an Account with CAVATICA If you have not already done so, please go ahead and create an account on CAVATICA . Any difficulties reach out to David in the Zoom Chat. We have an hour after each class this week, where we will stay to assist. Log in straight to CAVATICA Step-by-Step Instructions to log into CAVATICA Step-by-Step Instructions to create a project and start a JupyterLab Notebook While things start to cook -- let me review the Agenda and show a brief presentation Additional Resources At the end of this day, please stay after and register with Kids First Registering with Kids First Return to Day 1 Return to today's agenda","title":"Lets dive in"},{"location":"classes/day-1-reasoning/lets-dive-in/#lets-dive-in","text":"So we can be ready with a running notebook, lets get a machine up and running - once up - it will stay up for 30 minutes -- challenging us to keep to our agenda! Lets see how we do!","title":"Let's Dive In"},{"location":"classes/day-1-reasoning/lets-dive-in/#fast-track-create-an-account-with-cavatica","text":"If you have not already done so, please go ahead and create an account on CAVATICA . Any difficulties reach out to David in the Zoom Chat. We have an hour after each class this week, where we will stay to assist.","title":"FAST Track Create an Account with CAVATICA"},{"location":"classes/day-1-reasoning/lets-dive-in/#log-in-straight-to-cavatica","text":"Step-by-Step Instructions to log into CAVATICA Step-by-Step Instructions to create a project and start a JupyterLab Notebook While things start to cook -- let me review the Agenda and show a brief presentation","title":"Log in straight to CAVATICA"},{"location":"classes/day-1-reasoning/lets-dive-in/#additional-resources","text":"At the end of this day, please stay after and register with Kids First Registering with Kids First","title":"Additional Resources"},{"location":"classes/day-1-reasoning/lets-dive-in/#return-to-day-1","text":"Return to today's agenda","title":"Return to Day 1"},{"location":"classes/day-1-reasoning/logging-into-cavatica-step-by-step/","text":"Logging into CAVATICA Tutorial Login to CAVATICA Step-by-Step Step 1 - Navigate to Cavatica Navigate in your BROWSER (Chrome prefered) https://cavatica.sbgenomics.com/home The CAVATICA Initial Login Window looks like this: Logging in with your eRACommons ID will allow CAVATICA to provide you access to data for which you are authorized. You can Login with the eRA Commons after you have created an account on Cavatica. The account will automatically linked to the eRA Commons, making it possible to Log in with the eRA Commons. See the CAVATICA platform documentation for details You can read about the connection between dbGaP and eRACommons Step 2 - Authorize CAVATICA The next window you will see is the Gen3 login window - where you authorize NIH and RAS to retrieve the controlled-access datasets to which you have access. Click Yes, I authorize The next window can vary depending upon if this is your first time logging in or not. An example of your next window is the Dashboard view Next Step - Create a Project and Start a JupyterLab Notebook Create a Project and Start a JupyterLab Notebook","title":"Logging into CAVATICA Tutorial"},{"location":"classes/day-1-reasoning/logging-into-cavatica-step-by-step/#logging-into-cavatica-tutorial","text":"","title":"Logging into CAVATICA Tutorial"},{"location":"classes/day-1-reasoning/logging-into-cavatica-step-by-step/#login-to-cavatica-step-by-step","text":"","title":"Login to CAVATICA Step-by-Step"},{"location":"classes/day-1-reasoning/logging-into-cavatica-step-by-step/#step-1-navigate-to-cavatica","text":"Navigate in your BROWSER (Chrome prefered) https://cavatica.sbgenomics.com/home The CAVATICA Initial Login Window looks like this: Logging in with your eRACommons ID will allow CAVATICA to provide you access to data for which you are authorized. You can Login with the eRA Commons after you have created an account on Cavatica. The account will automatically linked to the eRA Commons, making it possible to Log in with the eRA Commons. See the CAVATICA platform documentation for details You can read about the connection between dbGaP and eRACommons","title":"Step 1 - Navigate to Cavatica"},{"location":"classes/day-1-reasoning/logging-into-cavatica-step-by-step/#step-2-authorize-cavatica","text":"The next window you will see is the Gen3 login window - where you authorize NIH and RAS to retrieve the controlled-access datasets to which you have access. Click Yes, I authorize The next window can vary depending upon if this is your first time logging in or not. An example of your next window is the Dashboard view","title":"Step 2 - Authorize CAVATICA"},{"location":"classes/day-1-reasoning/logging-into-cavatica-step-by-step/#next-step-create-a-project-and-start-a-jupyterlab-notebook","text":"Create a Project and Start a JupyterLab Notebook","title":"Next Step - Create a Project and Start a JupyterLab Notebook"},{"location":"classes/day-1-reasoning/starting-a-jupyter-lab-notebook/","text":"Starting A JupyterLab Notebook To start a notebook , we need a project . Please let David know your username in the Zoom Chat so you can be added to the elements-of-style-kids-first billing group. Create a new project We are at the login page, please select so we can create a new project. We need to select three pieces of important inforrmation. Enter a name, here I have used Kids-First-Elements-of-Style - note you will see in the project URL how it uniquely is identified because it includes your user id . Select the appropriate Billing group. For this course, give David your userid and you will be added so you can select elements-of-style-course-kids-first . Select Allow network access \u2757Important\u2757 be sure that you select Allow network access Start a new Analysis Next, within this new project, we will start an analysis. To do this, select Data Studio and select to create a new analysis. Name the analysis, here I used Kids-First-Elements-of-Style . Next select . Look over what you have entered When satisfied that it is correct, press Confirm it is starting Upon success, we will see it is starting, lets take a small :coffee: break. After :coffee: we will begin with the Command Line Forking a GitHub Repository and learning a few userful Command-line commands","title":"Starting a jupyter lab notebook"},{"location":"classes/day-1-reasoning/starting-a-jupyter-lab-notebook/#starting-a-jupyterlab-notebook","text":"To start a notebook , we need a project . Please let David know your username in the Zoom Chat so you can be added to the elements-of-style-kids-first billing group.","title":"Starting A JupyterLab Notebook"},{"location":"classes/day-1-reasoning/starting-a-jupyter-lab-notebook/#create-a-new-project","text":"We are at the login page, please select so we can create a new project. We need to select three pieces of important inforrmation. Enter a name, here I have used Kids-First-Elements-of-Style - note you will see in the project URL how it uniquely is identified because it includes your user id . Select the appropriate Billing group. For this course, give David your userid and you will be added so you can select elements-of-style-course-kids-first . Select Allow network access \u2757Important\u2757 be sure that you select Allow network access","title":"Create a new project"},{"location":"classes/day-1-reasoning/starting-a-jupyter-lab-notebook/#start-a-new-analysis","text":"Next, within this new project, we will start an analysis. To do this, select Data Studio and select to create a new analysis. Name the analysis, here I used Kids-First-Elements-of-Style . Next select . Look over what you have entered When satisfied that it is correct, press","title":"Start a new Analysis"},{"location":"classes/day-1-reasoning/starting-a-jupyter-lab-notebook/#confirm-it-is-starting","text":"Upon success, we will see it is starting, lets take a small :coffee: break.","title":"Confirm it is starting"},{"location":"classes/day-1-reasoning/starting-a-jupyter-lab-notebook/#after-coffee-we-will-begin-with-the-command-line","text":"Forking a GitHub Repository and learning a few userful Command-line commands","title":"After :coffee: we will begin with the Command Line"},{"location":"classes/day-2-code-versioning/day-2-code-versioning/","text":"Agenda for the Day 2: Code Versioning Time (UTC) Programme 11.00 - 11.10 :wave: Workspace set up and agenda for the day 11.10 - 11.30 1. Why Git and GitHub? Motivation and set up in the JupyterLab workspace 11.30 - 12.00 2. Git Routine 1 : Reusing an available repository with fork and how to keep in sync with parent project 12.00 - 12.10 :coffee: Short break 12.10 - 12:30: 3. Git Routine 2 : Extend your current code and use Git, GitHub to keep track of changes and contribute 12.30 - 12:45: 4. Git Routine 3 : Generate GitHub Personal Access Tokens 12.45 - 12:50 5. GitHub Auth Login 12.50 - 13:00 :raised_hand: Wrap up and overview of next days topics Additional resources: GitHub Hello World Happy Git and GitHub for the useR by Jenny Bryan GitHub Documentation","title":"Day 2 - Code versioning"},{"location":"classes/day-2-code-versioning/day-2-code-versioning/#agenda-for-the-day-2-code-versioning","text":"Time (UTC) Programme 11.00 - 11.10 :wave: Workspace set up and agenda for the day 11.10 - 11.30 1. Why Git and GitHub? Motivation and set up in the JupyterLab workspace 11.30 - 12.00 2. Git Routine 1 : Reusing an available repository with fork and how to keep in sync with parent project 12.00 - 12.10 :coffee: Short break 12.10 - 12:30: 3. Git Routine 2 : Extend your current code and use Git, GitHub to keep track of changes and contribute 12.30 - 12:45: 4. Git Routine 3 : Generate GitHub Personal Access Tokens 12.45 - 12:50 5. GitHub Auth Login 12.50 - 13:00 :raised_hand: Wrap up and overview of next days topics","title":"Agenda for the Day 2: Code Versioning"},{"location":"classes/day-2-code-versioning/day-2-code-versioning/#additional-resources","text":"GitHub Hello World Happy Git and GitHub for the useR by Jenny Bryan GitHub Documentation","title":"Additional resources:"},{"location":"classes/day-3-containerization/day-3-containerization/","text":"Agenda for the Day 3: Containerization with Environment Control Time (UTC) Programme 11.00 - 11.10 :wave: Workspace set up and agenda for the day 11:10 - 12:00 Creating a conda environment 12.00 - 12.10 :coffee: Short break 12:10 - 12:50 Building Dockerfiles 12.50 - 13:00 :raised_hand: Wrap up and overview of next days topics Additional Resources Anaconda Packages Search Anaconda Gallery Anaconda Open Source Anaconda Open Data Science Who is Anaconda Conda Docker File Documentation","title":"Day 3 - Containerization"},{"location":"classes/day-3-containerization/day-3-containerization/#agenda-for-the-day-3-containerization-with-environment-control","text":"Time (UTC) Programme 11.00 - 11.10 :wave: Workspace set up and agenda for the day 11:10 - 12:00 Creating a conda environment 12.00 - 12.10 :coffee: Short break 12:10 - 12:50 Building Dockerfiles 12.50 - 13:00 :raised_hand: Wrap up and overview of next days topics","title":"Agenda for the Day 3: Containerization with Environment Control"},{"location":"classes/day-3-containerization/day-3-containerization/#additional-resources","text":"Anaconda Packages Search Anaconda Gallery Anaconda Open Source Anaconda Open Data Science Who is Anaconda Conda Docker File Documentation","title":"Additional Resources"},{"location":"classes/day-4-workflow-development/day-4-workflow-development/","text":"Agenda for the Day 4: Workflow Development Time (UTC) Programme 11.00 - 11.30 :wave: Welcome and Preamble to Building our Workflow 11:10 - 12.00 Building A Nextflow Script 12.00 - 12.10 :coffee: Short break 12:10 - 12:40 Building A CWL Script 12.40 - 11.50 Shared elements across workflow languages 12.50 - 13:00 :raised_hand: Wrap up and overview of next days topics Additional Resources Nextflow Nextflow Basic pipeline with detail description of the file Nextflow Mixing Programming Languages In The Workflow Nextflow Blast Example Nextflow Community Based Pipelines Common Workflow Language Common Workflow Langage How-to","title":"Day 4 - Workflow development"},{"location":"classes/day-4-workflow-development/day-4-workflow-development/#agenda-for-the-day-4-workflow-development","text":"Time (UTC) Programme 11.00 - 11.30 :wave: Welcome and Preamble to Building our Workflow 11:10 - 12.00 Building A Nextflow Script 12.00 - 12.10 :coffee: Short break 12:10 - 12:40 Building A CWL Script 12.40 - 11.50 Shared elements across workflow languages 12.50 - 13:00 :raised_hand: Wrap up and overview of next days topics","title":"Agenda for the Day 4: Workflow Development"},{"location":"classes/day-4-workflow-development/day-4-workflow-development/#additional-resources","text":"Nextflow Nextflow Basic pipeline with detail description of the file Nextflow Mixing Programming Languages In The Workflow Nextflow Blast Example Nextflow Community Based Pipelines Common Workflow Language Common Workflow Langage How-to","title":"Additional Resources"},{"location":"classes/day-5-workflow-execution/day-5-workflow-execution/","text":"Agenda for the Day 5: Workflow Execution Time (UTC) Programme 11.00 - 11.20 :wave: Recap of the week so far 11.20 - 12.00 Working with Apps on the CAVATICA 12.00 - 12.10 :coffee: Short break 12:30 - 12.45 GitHub Actions to build, test and deposit container images 12.45 - 13:00 :wave: Cloud Credits Review, Course Survey and Wrap up Additional resources: A small example - picard FilterSamReads A Published Large Example: Zenodo","title":"Day 5 - Workflow execution"},{"location":"classes/day-5-workflow-execution/day-5-workflow-execution/#agenda-for-the-day-5-workflow-execution","text":"Time (UTC) Programme 11.00 - 11.20 :wave: Recap of the week so far 11.20 - 12.00 Working with Apps on the CAVATICA 12.00 - 12.10 :coffee: Short break 12:30 - 12.45 GitHub Actions to build, test and deposit container images 12.45 - 13:00 :wave: Cloud Credits Review, Course Survey and Wrap up","title":"Agenda for the Day 5: Workflow Execution"},{"location":"classes/day-5-workflow-execution/day-5-workflow-execution/#additional-resources","text":"A small example - picard FilterSamReads A Published Large Example: Zenodo","title":"Additional resources:"},{"location":"classes/pre-training/pre-training-creating-kids-first-and-other-accounts/","text":"Kids First, INCLUDE and Cavatica Account Registrations Today in this pre-training workshop, we will spend some time to get everyone registered for a few accounts. By now, we have a GitHub account, an ORCID and hopefully an ERA-Commons ID. This last one will allow us to take advantage of the NIH Researcher Authentication Service. In this portion of the class, we will be registering with Kids First as well as Cavatica and connecting these two accounts together. Beginning with Kids First Account Some of the data within the Kids First Data Resource Center Hub is registered tier access. What that means is that you simply need to register and the data are available to you. Creating a Kids First DRC Account Please create your account within the Kids First Data Resource Portal. Navigate to Kids First DRC First screen you will see is: From here you can navigate to either CREATE YOUR ACCOUNT or PORTAL LOGIN Let's click CREATE YOUR ACCOUNT Select a Connection Service A Connection service is used to manage your identity. Let's go ahead and Select a connection service . We have three choices: We have today created our ORCID and perhaps our ERACommons ID and we have the option of selecting Google. Each have their advantages and disadvantages. I'd like to steer you towards the NIH Researcher Authentication Service. The reason is that this is the service that will know what data sets you are authorized to access. Protecting Human Data - Introducing GA4GH Pediatric data, human data are sensitve data. To protect the use of the data, we have data access committees. Data Access Committees is a world-wide phenomenon. In this genomic era, where medicine and research involves many types of omics data, protecting these data means that one registers their intent and that intent is then documented. While today this is an often manual process, we do imagine a future where there is more automation involved, so the process becomes a bit more smoothed out. In the meantime, the NIH Researcher Authentication Service, is one step closer to the ideal. First there is the management of your identity, next is the management of what datasets you have access. The Global Alliance for Genomics & Health (GA4GH) is a policy-framing and technical standards-setting organization, seeking to enable responsible genomic data sharing within a human rights framework. I encourage you to stay abreast with this organization and the emerging policies they are promoting. Logging in with the NIH Researcher Authentication Service Let's choose the NIH Researcher Authentication Service Join Kids First Data Resource Portal You are now asked to enter basic Information after you have connected with Kids First. Enter the information that describes you best. The example on the website is a fictious Researcher. You are asked to agree to adhere to the NIH Genomic Data User Code of Conduct . Some of those terms are recapitulated on the page. Kids First Portal Dashboard Once these terms are accepted - you will be presented with a Dashboard And we are now ready to connect to Cavatica. Kids First Connect to Cavatica From the Kids First new user dashboard, we see how to connect to Cavatica, we see there are three steps. Creating an INCLUDE Data Hub Account Some of the data within the INCLUDE Data Hub is registered tier access. What that means is that you simply need to register and the data are available to you. Navigate to INCLUDE Data Hub First screen you will see is: From here you can navigate to either Login or Sign up Let's click Sign Up Sign up choices At this time, you can sign up with either Google or ORCID. Either works: Let's choose ORCID, when it becomes available, you will also be able to sign in with your ERACommons ID. We see now the Dashboard and we are now ready to connect to Cavatica. INCLUDE Connect with Cavatica From the INCLUDE dashboard, we see how to connect to Cavatica Using the Connect button on the left, we login to with the Researcher Authorization Service. The data are at this time mediated by a data service, Gen3 Now authenticated, the INCLUDE project to see what studies you are authorized to see. The portal then will allow you to browse these files and push them onto Cavatica. There are other courses that teach you how to do these steps. We are focused on building the literacy here of how to use and build your own tools with Cavatica in as much as possible a platform agnostic manner. Next, we connect using the Connect button on the right to Cavatica. And we are now ready to go to Cavatica See further documentation: Cavatica Account Login Creation Documentation Kids First Getting Started INCLUDE Help Recap of what we have done today Registered with Kids First Data Resource Center Registered with INCLUDE Registered with Cavatica Connected the Kids First DRC with the Cavatica Platform and Researcher Authorization Service Connected the INCLUDE Data Hub with Cavatica Platform and Researcher Authorization Service","title":"Pre training creating kids first and other accounts"},{"location":"classes/pre-training/pre-training-creating-kids-first-and-other-accounts/#kids-first-include-and-cavatica-account-registrations","text":"Today in this pre-training workshop, we will spend some time to get everyone registered for a few accounts. By now, we have a GitHub account, an ORCID and hopefully an ERA-Commons ID. This last one will allow us to take advantage of the NIH Researcher Authentication Service. In this portion of the class, we will be registering with Kids First as well as Cavatica and connecting these two accounts together.","title":"Kids First, INCLUDE  and Cavatica Account Registrations"},{"location":"classes/pre-training/pre-training-creating-kids-first-and-other-accounts/#beginning-with-kids-first-account","text":"Some of the data within the Kids First Data Resource Center Hub is registered tier access. What that means is that you simply need to register and the data are available to you.","title":"Beginning with Kids First Account"},{"location":"classes/pre-training/pre-training-creating-kids-first-and-other-accounts/#creating-a-kids-first-drc-account","text":"Please create your account within the Kids First Data Resource Portal. Navigate to Kids First DRC First screen you will see is: From here you can navigate to either CREATE YOUR ACCOUNT or PORTAL LOGIN Let's click CREATE YOUR ACCOUNT","title":"Creating a Kids First DRC Account"},{"location":"classes/pre-training/pre-training-creating-kids-first-and-other-accounts/#select-a-connection-service","text":"A Connection service is used to manage your identity. Let's go ahead and Select a connection service . We have three choices: We have today created our ORCID and perhaps our ERACommons ID and we have the option of selecting Google. Each have their advantages and disadvantages. I'd like to steer you towards the NIH Researcher Authentication Service. The reason is that this is the service that will know what data sets you are authorized to access.","title":"Select a Connection Service"},{"location":"classes/pre-training/pre-training-creating-kids-first-and-other-accounts/#protecting-human-data-introducing-ga4gh","text":"Pediatric data, human data are sensitve data. To protect the use of the data, we have data access committees. Data Access Committees is a world-wide phenomenon. In this genomic era, where medicine and research involves many types of omics data, protecting these data means that one registers their intent and that intent is then documented. While today this is an often manual process, we do imagine a future where there is more automation involved, so the process becomes a bit more smoothed out. In the meantime, the NIH Researcher Authentication Service, is one step closer to the ideal. First there is the management of your identity, next is the management of what datasets you have access. The Global Alliance for Genomics & Health (GA4GH) is a policy-framing and technical standards-setting organization, seeking to enable responsible genomic data sharing within a human rights framework. I encourage you to stay abreast with this organization and the emerging policies they are promoting.","title":"Protecting Human Data - Introducing GA4GH"},{"location":"classes/pre-training/pre-training-creating-kids-first-and-other-accounts/#logging-in-with-the-nih-researcher-authentication-service","text":"Let's choose the NIH Researcher Authentication Service","title":"Logging in with the NIH Researcher Authentication Service"},{"location":"classes/pre-training/pre-training-creating-kids-first-and-other-accounts/#join-kids-first-data-resource-portal","text":"You are now asked to enter basic Information after you have connected with Kids First. Enter the information that describes you best. The example on the website is a fictious Researcher. You are asked to agree to adhere to the NIH Genomic Data User Code of Conduct . Some of those terms are recapitulated on the page.","title":"Join Kids First Data Resource Portal"},{"location":"classes/pre-training/pre-training-creating-kids-first-and-other-accounts/#kids-first-portal-dashboard","text":"Once these terms are accepted - you will be presented with a Dashboard And we are now ready to connect to Cavatica.","title":"Kids First Portal Dashboard"},{"location":"classes/pre-training/pre-training-creating-kids-first-and-other-accounts/#kids-first-connect-to-cavatica","text":"From the Kids First new user dashboard, we see how to connect to Cavatica, we see there are three steps.","title":"Kids First Connect to Cavatica"},{"location":"classes/pre-training/pre-training-creating-kids-first-and-other-accounts/#creating-an-include-data-hub-account","text":"Some of the data within the INCLUDE Data Hub is registered tier access. What that means is that you simply need to register and the data are available to you. Navigate to INCLUDE Data Hub First screen you will see is: From here you can navigate to either Login or Sign up Let's click Sign Up","title":"Creating an INCLUDE Data Hub Account"},{"location":"classes/pre-training/pre-training-creating-kids-first-and-other-accounts/#sign-up-choices","text":"At this time, you can sign up with either Google or ORCID. Either works: Let's choose ORCID, when it becomes available, you will also be able to sign in with your ERACommons ID. We see now the Dashboard and we are now ready to connect to Cavatica.","title":"Sign up choices"},{"location":"classes/pre-training/pre-training-creating-kids-first-and-other-accounts/#include-connect-with-cavatica","text":"From the INCLUDE dashboard, we see how to connect to Cavatica Using the Connect button on the left, we login to with the Researcher Authorization Service. The data are at this time mediated by a data service, Gen3 Now authenticated, the INCLUDE project to see what studies you are authorized to see. The portal then will allow you to browse these files and push them onto Cavatica. There are other courses that teach you how to do these steps. We are focused on building the literacy here of how to use and build your own tools with Cavatica in as much as possible a platform agnostic manner. Next, we connect using the Connect button on the right to Cavatica. And we are now ready to go to Cavatica See further documentation: Cavatica Account Login Creation Documentation Kids First Getting Started INCLUDE Help","title":"INCLUDE Connect with Cavatica"},{"location":"classes/pre-training/pre-training-creating-kids-first-and-other-accounts/#recap-of-what-we-have-done-today","text":"Registered with Kids First Data Resource Center Registered with INCLUDE Registered with Cavatica Connected the Kids First DRC with the Cavatica Platform and Researcher Authorization Service Connected the INCLUDE Data Hub with Cavatica Platform and Researcher Authorization Service","title":"Recap of what we have done today"},{"location":"classes/pre-training/pre-training/","text":"Agenda for Pre-Training Workshop Time (UTC) Programme 11.00 - 11.10 Welcome Address, Motivation, Why we are here 11.10 - 11.30 Let's Register! 11.30 - 11.50 Kids First, INCLUDE and CAVATICA Registrations 11.50 - 12:00 Wrap up and overview of next days topics Quick Links: GitHub Zenodo ORCID Registration Now! ERA Commons ID INCLUDE Data Hub Kids First Data Resource Portal Cavatica by Velsera (formerly Seven Bridges) Additional Resources: NIH Kids First Cloud Credit Program Overview NIH INCLUDE Cloud Credit Program Overview How to apply for Kids First Cloud Credits How to apply for INCLUDE Cloud Credits Joint Kids First and INCLUDE with Velsera (formerly Seven Bridges) Monthly User Support Office Hours - every third Thursday of the month","title":"Pre-training"},{"location":"classes/pre-training/pre-training/#agenda-for-pre-training-workshop","text":"Time (UTC) Programme 11.00 - 11.10 Welcome Address, Motivation, Why we are here 11.10 - 11.30 Let's Register! 11.30 - 11.50 Kids First, INCLUDE and CAVATICA Registrations 11.50 - 12:00 Wrap up and overview of next days topics","title":"Agenda for Pre-Training Workshop"},{"location":"classes/pre-training/pre-training/#quick-links","text":"GitHub Zenodo ORCID Registration Now! ERA Commons ID INCLUDE Data Hub Kids First Data Resource Portal Cavatica by Velsera (formerly Seven Bridges)","title":"Quick Links:"},{"location":"classes/pre-training/pre-training/#additional-resources","text":"NIH Kids First Cloud Credit Program Overview NIH INCLUDE Cloud Credit Program Overview How to apply for Kids First Cloud Credits How to apply for INCLUDE Cloud Credits Joint Kids First and INCLUDE with Velsera (formerly Seven Bridges) Monthly User Support Office Hours - every third Thursday of the month","title":"Additional Resources:"}]}